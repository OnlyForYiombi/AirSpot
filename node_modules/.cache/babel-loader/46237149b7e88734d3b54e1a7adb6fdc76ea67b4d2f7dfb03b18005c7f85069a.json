{"ast":null,"code":"var _jsxFileName = \"/Users/mynameisyiombi/OnlyForGithub/AirSpot/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const [position, setPosition] = useState(null); // 초기 위치는 null로 설정\n\n  // Geolocation API로 현재 위치 가져오기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setPosition([latitude, longitude]); // 현재 위치로 상태 업데이트\n      }, error => {\n        console.error(\"Error fetching location: \", error);\n        // 에러 발생 시 기본 위치서울특별시청으로 설정\n        setPosition([37.5665, 126.9780]);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setPosition([37.5665, 126.9780]); // Geolocation 미지원 시 기본 위치\n    }\n  }, []);\n  if (!position) {\n    // 위치를 가져오는 동안 로딩 표시\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC9C0\\uB3C4 \\uC815\\uBCF4\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://carto.com/\\\">CartoDB</a>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"\\uD604\\uC7AC \\uC704\\uCE58: \", position[0].toFixed(4), \", \", position[1].toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"21xrY1Hz2JYGCGa5HZbMtpLbidU=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapComponent","_s","position","setPosition","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","toFixed","_c","$RefreshReg$"],"sources":["/Users/mynameisyiombi/OnlyForGithub/AirSpot/src/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nfunction MapComponent() {\n  const [position, setPosition] = useState(null); // 초기 위치는 null로 설정\n\n  // Geolocation API로 현재 위치 가져오기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setPosition([latitude, longitude]); // 현재 위치로 상태 업데이트\n        },\n        (error) => {\n          console.error(\"Error fetching location: \", error);\n          // 에러 발생 시 기본 위치서울특별시청으로 설정\n          setPosition([37.5665, 126.9780]);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n      setPosition([37.5665, 126.9780]); // Geolocation 미지원 시 기본 위치\n    }\n  }, []);\n\n  if (!position) {\n    // 위치를 가져오는 동안 로딩 표시\n    return <div>지도 정보를 가져오는 중입니다...</div>;\n  }\n\n  return (\n    <MapContainer center={position} zoom={13} style={{ height: '400px', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n        attribution='&copy; <a href=\"https://carto.com/\">CartoDB</a>'\n      />\n      <Marker position={position}>\n        <Popup>\n          현재 위치: {position[0].toFixed(4)}, {position[1].toFixed(4)}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCJ,QAAQ,IAAK;QACZ,MAAM;UAAEK,QAAQ;UAAEC;QAAU,CAAC,GAAGN,QAAQ,CAACO,MAAM;QAC/CN,WAAW,CAAC,CAACI,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,EACAE,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD;QACAP,WAAW,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;MAClC,CACF,CAAC;IACH,CAAC,MAAM;MACLQ,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;MAC9DP,WAAW,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,QAAQ,EAAE;IACb;IACA,oBAAOH,OAAA;MAAAa,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;EAEA,oBACEjB,OAAA,CAACL,YAAY;IAACuB,MAAM,EAAEf,QAAS;IAACgB,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAT,QAAA,gBAClFb,OAAA,CAACJ,SAAS;MACR2B,GAAG,EAAC,gEAAgE;MACpEC,WAAW,EAAC;IAAiD;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACFjB,OAAA,CAACH,MAAM;MAACM,QAAQ,EAAEA,QAAS;MAAAU,QAAA,eACzBb,OAAA,CAACF,KAAK;QAAAe,QAAA,GAAC,6BACE,EAACV,QAAQ,CAAC,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACtB,QAAQ,CAAC,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;AAACf,EAAA,CAzCQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA2CrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}