{"ast":null,"code":"var _jsxFileName = \"/Users/mynameisyiombi/OnlyForGithub/AirSpot/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const [position, setPosition] = useState([51.505, -0.09]); // 기본값: 런던\n\n  // Geolocation API로 현재 위치 가져오기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setPosition([latitude, longitude]); // 현재 위치로 상태 업데이트\n      }, error => {\n        console.error(\"Error fetching location: \", error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://carto.com/\\\">CartoDB</a>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"\\uD604\\uC7AC \\uC704\\uCE58: \", position[0].toFixed(4), \", \", position[1].toFixed(4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"UPNqftTGIwrjMGzjBvw8BO4HBu8=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapComponent","_s","position","setPosition","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","error","console","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/Users/mynameisyiombi/OnlyForGithub/AirSpot/src/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nfunction MapComponent() {\n  const [position, setPosition] = useState([51.505, -0.09]); // 기본값: 런던\n\n  // Geolocation API로 현재 위치 가져오기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setPosition([latitude, longitude]); // 현재 위치로 상태 업데이트\n        },\n        (error) => {\n          console.error(\"Error fetching location: \", error);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  return (\n    <MapContainer center={position} zoom={13} style={{ height: '400px', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n        attribution='&copy; <a href=\"https://carto.com/\">CartoDB</a>'\n      />\n      <Marker position={position}> \n        <Popup>\n          현재 위치: {position[0].toFixed(4)}, {position[1].toFixed(4)}\n        </Popup> \n      </Marker>\n    </MapContainer>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCJ,QAAQ,IAAK;QACZ,MAAM;UAAEK,QAAQ;UAAEC;QAAU,CAAC,GAAGN,QAAQ,CAACO,MAAM;QAC/CN,WAAW,CAAC,CAACI,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,EACAE,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACL,YAAY;IAACkB,MAAM,EAAEV,QAAS;IAACW,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClFlB,OAAA,CAACJ,SAAS;MACRuB,GAAG,EAAC,gEAAgE;MACpEC,WAAW,EAAC;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACFxB,OAAA,CAACH,MAAM;MAACM,QAAQ,EAAEA,QAAS;MAAAe,QAAA,eACzBlB,OAAA,CAACF,KAAK;QAAAoB,QAAA,GAAC,6BACE,EAACf,QAAQ,CAAC,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACtB,QAAQ,CAAC,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;AAACtB,EAAA,CAjCQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAmCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}